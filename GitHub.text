# initialize a git repository
git init

# check the status of the current repository
git status

# add all changes in the working directory to the staging area
git add .

# add specific files to the staging area
git add <file1> <file2> ...

# commit the changes in the staging area with a message
git commit -m "Commit message"

# view the commit history
git log

# view the commit history in a more readable format
git log --pretty=oneline

# view the commit history of a specific branch
git log <branch_name>

# view the difference between the working directory and the last commit
git diff

# view the difference between the staging area and the last commit
git diff --staged

# undo changes in a file
git checkout <file>

# undo changes in the working directory
git reset

# undo the last commit
git reset HEAD~1

# push the changes to a remote repository
git push <remote> <branch>

# pull the changes from a remote repository
git pull <remote> <branch>

# create a new branch and switch to it
git branch <branch_name>
git checkout <branch_name>

# switch to an existing branch
git checkout <branch_name>

# merge changes from another branch into the current branch
git merge <branch_name>

# delete a branch
git branch -d <branch_name>

# clone a remote repository
git clone <repository_url>

# show remote repository
git remote -v

# rename branch
git branch -m <newname>

# show all branches
git branch

# show current branch
git branch -vv

#create alias for command
git config --global alias.<alias-name> <git command>

# show commit history graph
git log --graph --oneline --decorate --all

# show the last commit on each branch
git branch -v --merged

# show the last commit on each branch, including unmerged branches
git branch -vv

# check the difference between the working directory and the last commit
git diff

# check the difference between the staging area and the last commit
git diff --staged

# check the difference between two branches
git diff <branch1> <branch2>

# check the difference between the working directory and a branch
git diff <branch>

# show the changes in a commit
git show <commit>

# show the changes in the last commit
git show

# show the changes in a specific file in a commit
git show <commit>:<file>

# show the changes in a specific file in the last commit
git show :<file>

# show the list of tags
git tag

# create a new tag
git tag <tag_name>

# create a new tag with a message
git tag -a <tag_name> -m "Tag message"

# show the changes between two tags
git diff <tag1> <tag2>

# show the changes between a tag and the current branch
git diff <
